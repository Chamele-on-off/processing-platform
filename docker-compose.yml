version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
      args:
        NODE_ENV: production
    image: processing-platform-backend
    container_name: backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://root:example@mongo:27017/processing-platform?authSource=admin
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://admin:admin@rabbitmq
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - PDF_VERIFICATION_ENABLED=true
      - AUTO_MATCHING_ENABLED=true
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/backups:/app/backups
    depends_on:
      - mongo
      - redis
      - rabbitmq

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    image: processing-platform-frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
    environment:
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/templates
      - API_URL=http://backend:5000
    depends_on:
      - backend

  mongo:
    image: mongo:6.0
    # ... (остальное без изменений)

  redis:
    image: redis:7.0-alpine
    # ... (остальное без изменений)

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    # ... (остальное без изменений)

  nginx:
    image: nginx:1.23-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
